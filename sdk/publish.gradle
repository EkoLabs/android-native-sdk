apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'org.jetbrains.dokka'
apply plugin: 'com.jfrog.bintray'
apply plugin: 'maven-publish'

version '0.0.1'
group 'com.eko'

Properties properties = new Properties()
if (project.rootProject.file('local.properties').canRead()) {
    properties.load(project.rootProject.file("local.properties").newDataInputStream())
}

dokka {
    outputFormat = "html"
}

task dokkaJavadoc(type: dokka.getClass()) {
    outputFormat = "javadoc"
    outputDirectory = "$buildDir/dokkaJavadoc"
}

task androidJavadocs(type: Javadoc) {
    failOnError = false
    source = android.sourceSets.main.java.srcDirs
    ext.androidJar = "${android.sdkDirectory}/platforms/${android.compileSdkVersion}/android.jar"
    classpath += files(ext.androidJar)
    exclude '**/R.html', '**/R.*.html', '**/index.html'
}

task androidJavadocsJar(type: Jar, dependsOn: dokkaJavadoc) {
    from "$buildDir/dokkaJavadoc"
    classifier = 'javadoc'
}

task androidSourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

publishing {
    publications {
        Production(MavenPublication) {
            artifact("$buildDir/outputs/aar/sdk-release.aar") // replace with your library name
            groupId this.group
            artifactId 'android-native-sdk' // replace with your library artifact id
            version this.version

            artifact androidJavadocsJar
            artifact androidSourcesJar

            pom.withXml {
                def dependenciesNode = asNode().appendNode('dependencies')

                // Iterate over the implementation dependencies (we don't want the test ones),
                // adding a <dependency> node for each
                configurations.implementation.allDependencies.each {
                    // Ensure dependencies such as fileTree are not included in the pom.
                    if (it.name != 'unspecified') {
                        def dependencyNode = dependenciesNode.appendNode('dependency')
                        dependencyNode.appendNode('groupId', it.group)
                        dependencyNode.appendNode('artifactId', it.name)
                        dependencyNode.appendNode('version', it.version)
                    }
                }
            }
        }
    }
}

bintray {
    user = properties.getProperty('user', System.getenv('BINTRAY_USER'))
    key = properties.getProperty('apiKey', System.getenv('BINTRAY_API_KEY'))
    publications = ['Production']
    configurations = ['archives']
    // Default: false. Whether to run this as dry-run, without deploying
    dryRun = false
    // Default: false. Whether to override version artifacts already published
    override = true
    // Default: false. Whether version should be auto published after an upload
    publish = true
    pkg {
        repo = 'sdk' // the name of the repository you created on Bintray
        name = 'com.eko.sdk' // the name of the package you created inside it
        userOrg = 'ekolabs'
        version {
            name = this.version
            released = new Date()
            vcsTag = this.version
        }
    }
}